// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 30/03/2009 17:17:15 (- $Rev: 12980 $, 141678468).

[
  uuid(9E046325-C625-4726-B6F4-16D2E3D5CFBD),
  version(11.0),
  helpstring("TraceToolCom Library ")

]
library TraceToolCom
{

  importlib("stdole2.tlb");

  interface IXTrace;
  interface IXTraceNodeBase;
  interface IXTraceNodeEx;
  interface IXMemberNode;
  interface IXWinWatch;
  interface IXTraceOptions;
  interface IXTraceToSend;
  coclass XTrace;
  interface IXTraceNode;
  coclass XTraceNodeEx;
  coclass XMemberNode;
  coclass XWinWatch;
  coclass XTraceOptions;
  interface IXWinTrace;
  coclass XWinTrace;
  coclass XTraceNode;
  coclass XTraceToSend;
  interface IXTraceTable;
  coclass XTraceTable;


  [
    uuid(C77595C0-A97D-4729-A80D-D1201DE2CA8A),
    version(1.0)
  ]
  enum SendMode
  {
    WinMsg = 0,
    Socket = 1,
    None = 2
  };

  [
    uuid(313CC146-C125-4A9D-B70B-BA4660323D4B),
    version(1.0)
  ]
  enum LogMode
  {
    [helpstring("Viewer Log is disabled")]
    ViewerLogDisabled = 0,
    [helpstring("Viewer Log is enabled")]
    ViewerLogEnabled = 1,
    [helpstring("Viewer Log is enabled , a new file is create each day (CCYYMMDD is appended to the filename)")]
    ViewerLogDaily = 2,
    [helpstring("Local log is disabled")]
    LocalLogDisabled = 3,
    [helpstring("Local log enabled")]
    LocalLogEnabled = 4,
    [helpstring("Local Log is enabled , a new file is create each day (CCYYMMDD is appended to the filename)")]
    LocalLogDaily = 5
  };

  [
    uuid(C419BC53-3781-4706-BA97-CC4AE1378F0D),
    version(1.0)
  ]
  enum ColorKind
  {
    BGR = 0,
    RGB = 1
  };

  [
    public
  ]
  typedef IXTraceTable** PPUserType1;

  [
    public
  ]
  typedef IXTraceTable** PPUserType2;

  [
    public
  ]
  typedef IXTraceTable** PPUserType3;

  [
    public
  ]
  typedef IXTraceTable** PPUserType4;

  [
    public
  ]
  typedef IXTraceTable** PPUserType5;

  [
    public
  ]
  typedef IXTraceTable** PPUserType6;

  [
    public
  ]
  typedef IXTraceTable** PPUserType7;

  [
    public
  ]
  typedef IXTraceTable** PPUserType8;

  [
    uuid(3DF44A95-5044-46B1-A947-9CB5135943DD),
    version(1.0),
    helpstring("Main TTrace Object"),
    dual,
    oleautomation
  ]
  interface IXTrace: IDispatch
  {
    [propget, id(0x00000066), helpstring("Shortcut to WinTrace.Warning")]
    HRESULT _stdcall Warning([out, retval] IXTraceToSend** Value);
    [propget, id(0x00000067), helpstring("Shortcut to WinTrace.Error")]
    HRESULT _stdcall Error([out, retval] IXTraceToSend** Value);
    [propget, id(0x00000068), helpstring("Shortcut to WinTrace.Debug")]
    HRESULT _stdcall Debug([out, retval] IXTraceToSend** Value);
    [propget, id(0x00000069)]
    HRESULT _stdcall Options([out, retval] IXTraceOptions** Value);
    [propget, id(0x0000006A)]
    HRESULT _stdcall WinTrace([out, retval] IXWinTrace** Value);
    [propget, id(0x0000006B)]
    HRESULT _stdcall Watches([out, retval] IXWinWatch** Value);
    [id(0x0000006C)]
    HRESULT _stdcall ClearAll(void);
    [id(0x0000006D)]
    HRESULT _stdcall Show([in, optional, defaultvalue(False)] VARIANT_BOOL IsVisible);
    [id(0x0000006E)]
    HRESULT _stdcall Flush([in] int FlushTimeOut);
    [id(0x000000C9)]
    HRESULT _stdcall CreateWinTrace([in] BSTR WinTraceId, [in] BSTR WinTraceText, [out, retval] IXWinTrace** Value);
    [id(0x000000CA)]
    HRESULT _stdcall CreateWinWatch([in] BSTR WinWatchId, [in] BSTR WinWatchText, [out, retval] IXWinWatch** Value);
    [id(0x000000CB)]
    HRESULT _stdcall CreateTraceTable([out, retval] IXTraceTable** Value);
    [id(0x000000CC)]
    HRESULT _stdcall Start(void);
    [id(0x000000CD)]
    HRESULT _stdcall Stop(void);
    [id(0x000000CE)]
    HRESULT _stdcall CloseViewer(void);
  };

  [
    uuid(B5604A34-11A5-4CC6-AED3-CC9B542AF198),
    version(1.0),
    dual,
    oleautomation
  ]
  interface IXTraceNodeBase: IDispatch
  {
    [propget, id(0x000000C8)]
    HRESULT _stdcall Id([out, retval] BSTR* Value);
    [propput, id(0x000000C8)]
    HRESULT _stdcall Id([in] BSTR Value);
    [propget, id(0x000000C9)]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000C9)]
    HRESULT _stdcall Enabled([in] VARIANT_BOOL Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall IconIndex([out, retval] int* Value);
    [propput, id(0x000000CA)]
    HRESULT _stdcall IconIndex([in] int Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall Tag([out, retval] int* Value);
    [propput, id(0x000000CB)]
    HRESULT _stdcall Tag([in] int Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall WinTraceId([out, retval] BSTR* Value);
    [propput, id(0x000000CC)]
    HRESULT _stdcall WinTraceId([in] BSTR Value);
    [id(0x000000CD)]
    HRESULT _stdcall CreateNodeEx([out, retval] IXTraceNodeEx** Value);
  };

  [
    uuid(2267AF79-9C4B-4689-9E5F-1AE2EC0946D7),
    version(1.0),
    helpstring("XTraceNodeEx"),
    hidden,
    dual,
    oleautomation
  ]
  interface IXTraceNodeEx: IXTraceNodeBase
  {
    [propget, id(0x000000FA)]
    HRESULT _stdcall LeftMsg([out, retval] BSTR* Value);
    [propput, id(0x000000FA)]
    HRESULT _stdcall LeftMsg([in] BSTR Value);
    [propget, id(0x000000FB)]
    HRESULT _stdcall RightMsg([out, retval] BSTR* Value);
    [propput, id(0x000000FB)]
    HRESULT _stdcall RightMsg([in] BSTR Value);
    [propget, id(0x000000FC)]
    HRESULT _stdcall ParentNodeId([out, retval] BSTR* Value);
    [propput, id(0x000000FC)]
    HRESULT _stdcall ParentNodeId([in] BSTR Value);
    [propget, id(0x000000FD)]
    HRESULT _stdcall Members([out, retval] IXMemberNode** Value);
    [id(0x000000FE)]
    HRESULT _stdcall AddObject([in] VARIANT Obj);
    [id(0x000000FF)]
    HRESULT _stdcall AddValue([in] VARIANT Obj, [in, optional, defaultvalue("")] BSTR ObjTitle, [in, optional, defaultvalue(5)] long MaxLevel);
    [id(0x00000100)]
    HRESULT _stdcall AddDump([in] BSTR ShortTitle, [in] LPSTR Adr, [in] int Count);
    [id(0x00000101)]
    HRESULT _stdcall AddFontDetail([in] int ColId, [in] VARIANT_BOOL Bold, [in, optional, defaultvalue(False)] VARIANT_BOOL Italic, [in, optional, defaultvalue(0)] int Color, [in, optional, defaultvalue(0)] int Size, [in, optional, defaultvalue("")] BSTR FontName);
    [id(0x00000102)]
    HRESULT _stdcall AddTable([in] IXTraceTable** Table);
    [id(0x00000103)]
    HRESULT _stdcall AddXml([in] BSTR Xml);
    [id(0x00000104)]
    HRESULT _stdcall AddBackgroundColor([in] int ColId, [in, optional, defaultvalue(-1)] int Color);
    [id(0x00000105)]
    HRESULT _stdcall Send([out, retval] IXTraceNode** Value);
    [id(0x00000106)]
    HRESULT _stdcall Resend([out, retval] IXTraceNode** Value);
  };

  [
    uuid(A1C8577E-15E7-4190-ACD9-256BE360F388),
    version(1.0),
    helpstring("XMemberNode"),
    dual,
    oleautomation
  ]
  interface IXMemberNode: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall Col1([out, retval] BSTR* Value);
    [propput, id(0x000000C9)]
    HRESULT _stdcall Col1([in] BSTR Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall Col2([out, retval] BSTR* Value);
    [propput, id(0x000000CA)]
    HRESULT _stdcall Col2([in] BSTR Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall Col3([out, retval] BSTR* Value);
    [propput, id(0x000000CB)]
    HRESULT _stdcall Col3([in] BSTR Value);
    [propget, id(0x00000065)]
    HRESULT _stdcall Tag([out, retval] int* Value);
    [propput, id(0x00000065)]
    HRESULT _stdcall Tag([in] int Value);
    [id(0x000000CC)]
    HRESULT _stdcall Add([in] BSTR Col1, [in, optional, defaultvalue("")] BSTR Col2, [in, optional, defaultvalue("")] BSTR Col3, [out, retval] IXMemberNode** Value);
    [id(0x000000CD)]
    HRESULT _stdcall SetFontDetail([in] int ColId, [in] VARIANT_BOOL Bold, [in, optional, defaultvalue(False)] VARIANT_BOOL Italic, [in, optional, defaultvalue(0)] int Color, [in, optional, defaultvalue(0)] int Size, [in, optional, defaultvalue("")] BSTR FontName, [out, retval] IXMemberNode** Value);
  };

  [
    uuid(AEF54A58-09A3-49FE-8FD8-31290649BB35),
    version(1.0),
    helpstring("XWinWatch"),
    hidden,
    dual,
    oleautomation
  ]
  interface IXWinWatch: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000C9)]
    HRESULT _stdcall Enabled([in] VARIANT_BOOL Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall Tag([out, retval] int* Value);
    [propput, id(0x000000CA)]
    HRESULT _stdcall Tag([in] int Value);
    [id(0x000000CB)]
    HRESULT _stdcall DisplayWin(void);
    [id(0x000000CC)]
    HRESULT _stdcall ClearAll(void);
    [id(0x000000CD)]
    HRESULT _stdcall Send([in] BSTR WatchName, [in] VARIANT v);
    [propget, id(0x00000065)]
    HRESULT _stdcall Id([out, retval] BSTR* Value);
    [propput, id(0x00000065)]
    HRESULT _stdcall Id([in] BSTR Value);
    [id(0x000000CE)]
    HRESULT _stdcall Close(void);
  };

  [
    uuid(8F7167DD-8300-4D43-B434-C536C93D5CB8),
    version(1.0),
    helpstring("XTraceOptions"),
    hidden,
    dual,
    oleautomation
  ]
  interface IXTraceOptions: IDispatch
  {
    [propget, id(0x000000C9)]
    HRESULT _stdcall SocketHost([out, retval] BSTR* Value);
    [propput, id(0x000000C9)]
    HRESULT _stdcall SocketHost([in] BSTR Value);
    [propget, id(0x000000CA)]
    HRESULT _stdcall SendMode([out, retval] enum SendMode* Value);
    [propput, id(0x000000CA)]
    HRESULT _stdcall SendMode([in] enum SendMode Value);
    [propget, id(0x000000CB)]
    HRESULT _stdcall SendDate([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CB)]
    HRESULT _stdcall SendDate([in] VARIANT_BOOL Value);
    [propget, id(0x000000CC)]
    HRESULT _stdcall SendFunctions([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CC)]
    HRESULT _stdcall SendFunctions([in] VARIANT_BOOL Value);
    [propget, id(0x00000066)]
    HRESULT _stdcall SendThreadId([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000066)]
    HRESULT _stdcall SendThreadId([in] VARIANT_BOOL Value);
    [propget, id(0x00000065)]
    HRESULT _stdcall SendProcessName([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000065)]
    HRESULT _stdcall SendProcessName([in] VARIANT_BOOL Value);
    [propget, id(0x00000067)]
    HRESULT _stdcall SocketPort([out, retval] int* Value);
    [propput, id(0x00000067)]
    HRESULT _stdcall SocketPort([in] int Value);
    [propget, id(0x000000CD)]
    HRESULT _stdcall ColorKind([out, retval] enum ColorKind* Value);
    [propput, id(0x000000CD)]
    HRESULT _stdcall ColorKind([in] enum ColorKind Value);
    [propget, id(0x000000CE)]
    HRESULT _stdcall SocketUdp([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x000000CE)]
    HRESULT _stdcall SocketUdp([in] VARIANT_BOOL Value);
  };

  [
    uuid(2564ABB2-A952-42E9-A412-67F45384D3AB),
    version(1.0),
    dual,
    oleautomation
  ]
  interface IXTraceToSend: IXTraceNodeBase
  {
    [id(0x000000FA)]
    HRESULT _stdcall Send([in] BSTR LeftMsg, [in, optional, defaultvalue("")] BSTR RightMsg, [out, retval] IXTraceNode** Value);
    [id(0x000000FB)]
    HRESULT _stdcall SendObject([in] BSTR LeftMsg, [in] VARIANT Obj, [out, retval] IXTraceNode** Value);
    [id(0x000000FC)]
    HRESULT _stdcall SendValue([in] BSTR LeftMsg, [in] VARIANT Obj, [in, optional, defaultvalue("")] BSTR ObjTitle, [out, retval] IXTraceNode** Value);
    [id(0x000000FD)]
    HRESULT _stdcall SendValueIDisptach([in] BSTR LeftMsg, [in]  IDispatch* Obj, [in, optional, defaultvalue("")] BSTR ObjTitle, [out, retval] IXTraceNode** Value);
    [id(0x000000FE)]
    HRESULT _stdcall SendDump([in] BSTR LeftMsg, [in] BSTR ShortTitle, [in] LPSTR Adress, [in] int Count, [out, retval] IXTraceNode** Value);
    [id(0x000000FF)]
    HRESULT _stdcall SendTable([in] BSTR LeftMsg, [in] IXTraceTable** Table);
    [id(0x00000100)]
    HRESULT _stdcall SendXml([in] BSTR LeftMsg, [in] BSTR Xml);
    [id(0x00000101)]
    HRESULT _stdcall SendBackgroundColor([in] BSTR LeftMsg, [in] int Color, [in, optional, defaultvalue(-1)] int ColId);
    [id(0x00000102)]
    HRESULT _stdcall EnterMethod([in] BSTR LeftMsg, [in] BSTR RightMsg);
    [id(0x00000103)]
    HRESULT _stdcall ExitMethod([in] BSTR LeftMsg, [in] BSTR RightMsg);
    [id(0x00000104)]
    HRESULT _stdcall Indent([in] BSTR LeftMsg, [in, optional, defaultvalue("")] BSTR RightMsg);
    [id(0x00000105)]
    HRESULT _stdcall UnIndent([in, optional, defaultvalue("")] BSTR LeftMsg, [in, optional, defaultvalue("")] BSTR RightMsg);
  };

  [
    uuid(67D4B6E1-C1E0-4715-BB23-8A289E77D907),
    version(1.0),
    helpstring("TraceNode interface"),
    hidden,
    dual,
    oleautomation
  ]
  interface IXTraceNode: IXTraceToSend
  {
    [id(0x0000012C)]
    HRESULT _stdcall Resend([in] BSTR LeftMsg, [in, optional, defaultvalue("")] BSTR RightMsg, [out, retval] IXTraceNode** Value);
    [id(0x0000012D)]
    HRESULT _stdcall ResendLeft([in] BSTR LeftMsg, [out, retval] IXTraceNode** Value);
    [id(0x0000012E)]
    HRESULT _stdcall ResendRight([in] BSTR RightMsg, [out, retval] IXTraceNode** Value);
    [id(0x0000012F)]
    HRESULT _stdcall Append([in] BSTR NewLeftMsg, [in, optional, defaultvalue("")] BSTR NewRightMsg, [out, retval] IXTraceNode** Value);
    [id(0x00000130)]
    HRESULT _stdcall AppendLeft([in] BSTR NewLeftMsg, [out, retval] IXTraceNode** Value);
    [id(0x00000131)]
    HRESULT _stdcall AppendRight([in] BSTR NewRightMsg, [out, retval] IXTraceNode** Value);
    [id(0x00000132)]
    HRESULT _stdcall Show([out, retval] IXTraceNode** Value);
    [id(0x00000133)]
    HRESULT _stdcall SetSelected([out, retval] IXTraceNode** Value);
    [id(0x00000134)]
    HRESULT _stdcall Delete([out, retval] IXTraceNode** Value);
    [id(0x00000135)]
    HRESULT _stdcall DeleteChildren([out, retval] IXTraceNode** Value);
    [id(0x00000136)]
    HRESULT _stdcall SetFontDetail([in] int ColId, [in] VARIANT_BOOL Bold, [in, optional, defaultvalue(False)] VARIANT_BOOL Italic, [in, optional, defaultvalue(0)] int Color, [in, optional, defaultvalue(0)] int Size, [in, optional, defaultvalue("")] BSTR FontName, [out, retval] IXTraceNode** Value);
    [id(0x00000137)]
    HRESULT _stdcall ResendIconIndex([in] int Index, [out, retval] IXTraceNode** Value);
    [id(0x00000138)]
    HRESULT _stdcall SetBackgroundColor([in] int Color, [in, optional, defaultvalue(-1)] int ColId, [out, retval] IXTraceNode** Value);
  };

  [
    uuid(4365CFCE-6247-4F05-ADBB-2F42FF8B6348),
    version(1.0),
    helpstring("XWinTrace"),
    hidden,
    dual,
    oleautomation
  ]
  interface IXWinTrace: IXTraceToSend
  {
    [propget, id(0x0000012C)]
    HRESULT _stdcall Warning([out, retval] IXTraceToSend** Value);
    [propget, id(0x0000012D)]
    HRESULT _stdcall Error([out, retval] IXTraceToSend** Value);
    [propget, id(0x0000012E)]
    HRESULT _stdcall Debug([out, retval] IXTraceToSend** Value);
    [propget, id(0x0000012F)]
    HRESULT _stdcall WinTraceText([out, retval] BSTR* Value);
    [propput, id(0x0000012F)]
    HRESULT _stdcall WinTraceText([in] BSTR Value);
    [id(0x00000130)]
    HRESULT _stdcall SaveToTextfile([in] BSTR Filename);
    [id(0x00000131)]
    HRESULT _stdcall SaveToXml([in] BSTR Filename, [in, optional, defaultvalue("")] BSTR StyleSheet);
    [id(0x00000132)]
    HRESULT _stdcall LoadXml([in] BSTR Filename);
    [id(0x00000133)]
    HRESULT _stdcall DisplayWin(void);
    [id(0x00000134)]
    HRESULT _stdcall setMultiColumn([in] int MainColIndex);
    [id(0x00000135)]
    HRESULT _stdcall setColumnsTitle([in] BSTR Titles);
    [id(0x00000136)]
    HRESULT _stdcall setColumnsWidth([in] BSTR Widths);
    [id(0x00000137)]
    HRESULT _stdcall ClearAll(void);
    [id(0x00000138)]
    HRESULT _stdcall setLogFile([in] BSTR Filename, [in, optional] enum LogMode Mode, [in, optional] long MaxLines);
    [id(0x00000191)]
    HRESULT _stdcall Close(void);
  };

  [
    uuid(1EF2CA18-A338-4F31-A420-6F03C4FEFE63),
    version(1.0),
    helpstring("Dispatch interface for XTraceTable Object"),
    dual,
    oleautomation
  ]
  interface IXTraceTable: IDispatch
  {
    [id(0x000000C9)]
    HRESULT _stdcall AddColumnTitle([in] BSTR ColTitle);
    [id(0x000000CA)]
    HRESULT _stdcall AddRow(void);
    [id(0x000000CB)]
    HRESULT _stdcall AddRowData([in] BSTR Cell);
    [id(0x000000CC)]
    HRESULT _stdcall GetTitle([out, retval] BSTR* Value);
    [id(0x000000CD)]
    HRESULT _stdcall GetRowData([in] long Row, [out, retval] BSTR* Value);
    [propget, id(0x000000CE)]
    HRESULT _stdcall RowCount([out, retval] long* Value);
  };

  [
    uuid(14C8EA3E-1930-48E1-9BCC-63E7737CEF29),
    version(1.0)
  ]
  coclass XTrace
  {
    [default] interface IXTrace;
  };

  [
    uuid(03DF9B86-BF3A-415C-A6ED-52531CD0D533),
    version(1.0)
  ]
  coclass XTraceNodeEx
  {
    [default] interface IXTraceNodeEx;
  };

  [
    uuid(DC02B3E8-FA4A-4A7D-A967-14CA31AF8968),
    version(1.0)
  ]
  coclass XMemberNode
  {
    [default] interface IXMemberNode;
  };

  [
    uuid(D1CA152D-E3AC-49D5-84B4-409FA0CCF750),
    version(1.0)
  ]
  coclass XWinWatch
  {
    [default] interface IXWinWatch;
  };

  [
    uuid(58F75201-E834-4B63-84B9-24CCFF36F75E),
    version(1.0)
  ]
  coclass XTraceOptions
  {
    [default] interface IXTraceOptions;
  };

  [
    uuid(1DF8CC03-48DB-4EA2-B0F6-F3116F33C38F),
    version(1.0),
    helpstring("XWinTrace")
  ]
  coclass XWinTrace
  {
    [default] interface IXWinTrace;
  };

  [
    uuid(0D7E252F-7FD3-4173-B53B-0DFAE57CE9D1),
    version(1.0)
  ]
  coclass XTraceNode
  {
    [default] interface IXTraceNode;
  };

  [
    uuid(418EA4E6-F6F8-438F-AB27-B19067842B2C),
    version(1.0),
    helpstring("XTraceToSend Object")
  ]
  coclass XTraceToSend
  {
    [default] interface IXTraceToSend;
  };

  [
    uuid(BAFF53E4-4E34-4059-9599-132713F81521),
    version(1.0),
    helpstring("XTraceTable Object")
  ]
  coclass XTraceTable
  {
    [default] interface IXTraceTable;
  };

};
